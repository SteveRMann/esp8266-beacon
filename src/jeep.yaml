# This is the ESP device inside the Jeep to provide presence (status=connected).
substitutions:
  device_name: jeep
  
esphome:
  name: ${device_name}
  on_boot:
    priority: -100.0
    then:
      - delay: 1s
      - script.execute: test_ota

esp8266:
  board: esp01_1m

api:

ota:
  safe_mode: True
  
packages:
  wifi: !include common/wifi.yaml

logger:
  level: VERBOSE     # default is DEBUG


binary_sensor:
  - platform: status
    name: "Jeep Status"
  - platform: homeassistant
    id: otamode
    entity_id: input_boolean.jeep_ota_mode
    
    
#################################################
# Get the WiFi details
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${device_name} IP Address
    ssid:
      name: ${device_name} SSID
    mac_address:
      name: ${device_name} Mac Address
      
sensor:
  - platform: wifi_signal
    name: ${device_name} WiFi Signal Sensor"
    update_interval: 60s
    
    
#################################################    
# Script to test if the otamode switch is on or off
script:
  - id: test_ota
    mode: queued
    then:
      - logger.log: "Checking OTA Mode"
      - if:
          condition:
            binary_sensor.is_on: otamode
          then:
            - logger.log: 'OTA Mode ON'
            - deep_sleep.prevent: deep_sleep_handler
          else:
            - logger.log: 'OTA Mode OFF'
      - delay: 2s
      - script.execute: test_ota


    
#################################################
#Deep Sleep
deep_sleep:
  id: deep_sleep_handler
  run_duration: 5s
  sleep_duration: 120s
  

################################################
#Make a button to reboot the ESP device
button:
  - platform: restart
    name: ${device_name} Restart
  